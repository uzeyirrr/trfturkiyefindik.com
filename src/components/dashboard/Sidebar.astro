---
// Dashboard Sidebar bileşeni
export interface Props {
  currentPage?: string;
}

const { currentPage = 'dashboard' } = Astro.props;
---

<div class="fixed inset-y-0 left-0 z-50 w-64 bg-white shadow-xl border-r border-gray-200 transform transition-transform duration-300 ease-in-out -translate-x-full lg:translate-x-0" id="sidebar">
  <div class="flex h-16 items-center justify-between px-6 border-b border-gray-200">
    <div class="flex items-center space-x-3">
      <img src="/logo.svg" alt="Türkiye Fındık" class="h-8 w-auto" />
      <span class="text-lg font-semibold text-gray-900">Dashboard</span>
    </div>
    <button id="sidebarToggle" class="lg:hidden p-2 rounded-md text-gray-400 hover:text-gray-600 hover:bg-gray-100">
      <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>
  </div>
  
  <nav class="mt-6 px-4">
    <div class="space-y-2">
      <a href="/dashboard" class={`flex items-center px-4 py-3 text-sm font-medium rounded-xl transition-all duration-200 group ${
        currentPage === 'dashboard' 
          ? 'text-gray-900 bg-blue-50 border border-blue-200 hover:bg-blue-100' 
          : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'
      }`}>
        <svg class={`mr-3 h-5 w-5 ${
          currentPage === 'dashboard' ? 'text-blue-600' : 'text-gray-400 group-hover:text-gray-600'
        }`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z"></path>
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5a2 2 0 012-2h4a2 2 0 012 2v6H8V5z"></path>
        </svg>
        Dashboard
      </a>
      <a href="#products" class="flex items-center px-4 py-3 text-sm font-medium text-gray-600 hover:text-gray-900 hover:bg-gray-50 rounded-xl transition-all duration-200 group">
        <svg class="mr-3 h-5 w-5 text-gray-400 group-hover:text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>
        </svg>
        Ürünlerim
      </a>
      <a href="#orders" class="flex items-center px-4 py-3 text-sm font-medium text-gray-600 hover:text-gray-900 hover:bg-gray-50 rounded-xl transition-all duration-200 group">
        <svg class="mr-3 h-5 w-5 text-gray-400 group-hover:text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
        </svg>
        Siparişler
      </a>
      <a href="/dashboard/prices" class={`flex items-center px-4 py-3 text-sm font-medium rounded-xl transition-all duration-200 group ${
        currentPage === 'prices' 
          ? 'text-gray-900 bg-blue-50 border border-blue-200 hover:bg-blue-100' 
          : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'
      }`}>
        <svg class={`mr-3 h-5 w-5 ${
          currentPage === 'prices' ? 'text-blue-600' : 'text-gray-400 group-hover:text-gray-600'
        }`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
        </svg>
        Fındık Fiyatları
      </a>
             <a href="/dashboard/deliveries" class={`flex items-center px-4 py-3 text-sm font-medium rounded-xl transition-all duration-200 group ${
         currentPage === 'deliveries'
           ? 'text-gray-900 bg-blue-50 border border-blue-200 hover:bg-blue-100'
           : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'
       }`}>
         <svg class={`mr-3 h-5 w-5 ${
           currentPage === 'deliveries' ? 'text-blue-600' : 'text-gray-400 group-hover:text-gray-600'
         }`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
           <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>
         </svg>
         Teslimatlar
       </a>

       <!-- Fabrika Teslimatları (sadece fabrika rolü için) -->
       <a href="/dashboard/factory-deliveries" class={`flex items-center px-4 py-3 text-sm font-medium rounded-xl transition-all duration-200 group ${
         currentPage === 'factory-deliveries'
           ? 'text-gray-900 bg-blue-50 border border-blue-200 hover:bg-blue-100'
           : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'
       }`}>
         <svg class={`mr-3 h-5 w-5 ${
           currentPage === 'factory-deliveries' ? 'text-blue-600' : 'text-gray-400 group-hover:text-gray-600'
         }`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
           <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
         </svg>
         Fabrika Teslimatları
       </a>
      <a href="#messages" class="flex items-center px-4 py-3 text-sm font-medium text-gray-600 hover:text-gray-900 hover:bg-gray-50 rounded-xl transition-all duration-200 group">
        <svg class="mr-3 h-5 w-5 text-gray-400 group-hover:text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
        </svg>
        Mesajlar
        <span class="ml-auto bg-red-500 text-white text-xs rounded-full px-2 py-1">3</span>
      </a>
      <a href="#analytics" class="flex items-center px-4 py-3 text-sm font-medium text-gray-600 hover:text-gray-900 hover:bg-gray-50 rounded-xl transition-all duration-200 group">
        <svg class="mr-3 h-5 w-5 text-gray-400 group-hover:text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
        </svg>
        Analitik
      </a>
      <a href="#profile" class="flex items-center px-4 py-3 text-sm font-medium text-gray-600 hover:text-gray-900 hover:bg-gray-50 rounded-xl transition-all duration-200 group">
        <svg class="mr-3 h-5 w-5 text-gray-400 group-hover:text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
        </svg>
        Profil
      </a>
    </div>
  </nav>

  <!-- Current Price Section -->
  <div class="px-4 mt-6">
    <div class="bg-gradient-to-r from-green-50 to-emerald-50 border border-green-200 rounded-xl p-4">
      <div class="flex items-center justify-between mb-2">
        <h4 class="text-sm font-semibold text-green-800">Güncel Fındık Fiyatı</h4>
        <svg class="h-4 w-4 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"></path>
        </svg>
      </div>
      <div class="text-2xl font-bold text-green-900" id="sidebarCurrentPrice">₺--</div>
      <div class="text-xs text-green-600" id="sidebarPriceChange">Yükleniyor...</div>
    </div>
  </div>

  <!-- User Profile Section -->
  <div class="absolute bottom-0 left-0 right-0 p-4 border-t border-gray-200">
    <div class="flex items-center space-x-3">
      <img class="h-10 w-10 rounded-full bg-gradient-to-br from-blue-500 to-purple-600" src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80" alt="" />
      <div class="flex-1 min-w-0">
        <p class="text-sm font-medium text-gray-900 truncate" id="userName">Kullanıcı Adı</p>
        <p class="text-xs text-gray-500 truncate" id="userRole">Üretici</p>
      </div>
      <button 
        id="logoutBtn"
        class="p-2 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded-lg transition-all duration-200"
        title="Çıkış Yap"
      >
        <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path>
        </svg>
      </button>
    </div>
  </div>
</div>

<!-- Mobile overlay -->
<div class="fixed inset-0 z-40 bg-gray-600 bg-opacity-75 lg:hidden hidden" id="sidebarOverlay"></div>

<script>
  // Sidebar toggle functionality
  const sidebar = document.getElementById('sidebar');
  const sidebarOverlay = document.getElementById('sidebarOverlay');
  const mobileSidebarToggle = document.getElementById('mobileSidebarToggle');
  const sidebarToggle = document.getElementById('sidebarToggle');

  function openSidebar() {
    sidebar.classList.remove('-translate-x-full');
    sidebarOverlay.classList.remove('hidden');
  }

  function closeSidebar() {
    sidebar.classList.add('-translate-x-full');
    sidebarOverlay.classList.add('hidden');
  }

  if (mobileSidebarToggle) {
    mobileSidebarToggle.addEventListener('click', openSidebar);
  }
  if (sidebarToggle) {
    sidebarToggle.addEventListener('click', closeSidebar);
  }
  if (sidebarOverlay) {
    sidebarOverlay.addEventListener('click', closeSidebar);
  }

  // Load current price for sidebar
  async function loadCurrentPrice() {
    try {
      const response = await fetch('/api/prices');
      const result = await response.json();
      
      if (result.success && result.prices.length > 0) {
        const prices = result.prices;
        const latestPrice = prices[0];
        const currentPriceEl = document.getElementById('sidebarCurrentPrice');
        const priceChangeEl = document.getElementById('sidebarPriceChange');
        
        if (currentPriceEl) {
          currentPriceEl.textContent = `₺${latestPrice.price}`;
        }
        
        // Fiyat değişimini hesapla (son iki fiyat arasında)
        if (prices.length > 1 && priceChangeEl) {
          const previousPrice = prices[1].price;
          const change = ((latestPrice.price - previousPrice) / previousPrice * 100).toFixed(1);
          const changeText = change > 0 ? `+${change}%` : `${change}%`;
          const changeColor = change > 0 ? 'text-green-600' : 'text-red-600';
          
          priceChangeEl.textContent = changeText;
          priceChangeEl.className = `text-xs ${changeColor}`;
        } else if (priceChangeEl) {
          priceChangeEl.textContent = 'Yeni fiyat';
          priceChangeEl.className = 'text-xs text-green-600';
        }
      }
    } catch (error) {
      console.error('Fiyat yükleme hatası:', error);
    }
  }

  // Load user info
  async function loadUserInfo() {
    try {
      const response = await fetch('/api/auth/me');
      const result = await response.json();
      
      if (result.success) {
        const user = result.user;
        const userNameEl = document.getElementById('userName');
        const userRoleEl = document.getElementById('userRole');
        
        if (userNameEl) {
          userNameEl.textContent = user.name || 'Kullanıcı';
        }
        if (userRoleEl) {
          userRoleEl.textContent = user.role === 'admin' ? 'Admin' : 'Üretici';
        }
      }
    } catch (error) {
      console.error('Kullanıcı bilgisi yükleme hatası:', error);
    }
  }

  // Logout functionality
  const logoutBtn = document.getElementById('logoutBtn');
  if (logoutBtn) {
    logoutBtn.addEventListener('click', async function() {
      try {
        const response = await fetch('/api/auth/logout', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          }
        });
        
        const result = await response.json();
        
        if (result.success) {
          window.location.href = '/';
        } else {
          alert('Çıkış sırasında bir hata oluştu.');
        }
      } catch (error) {
        console.error('Çıkış hatası:', error);
        alert('Bağlantı hatası.');
      }
    });
  }

  // Initialize
  loadCurrentPrice();
  loadUserInfo();
</script>

